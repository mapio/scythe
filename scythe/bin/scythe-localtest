echo1 "Running the test cycle"

clean_opt='-n'
while getopts ":sc" opt; do
  case $opt in
    c)

        clean_opt=''
        ;;

    s)

        echo2 "Starting redis and the test runner"

        mkdir -p "$REWEBDIS_DATA_DIR"

        if docker ps -a --filter label=scythe=rewebdis | grep -q scythe-rewebdis; then
            echo "killing old instance..." $(docker rm -f scythe-rewebdis) >&2
        fi
        did=$(docker run -l scythe=rewebdis -d -p 6379:6379 -p 7379:7379 -v "$REWEBDIS_DATA_DIR":/data --name scythe-rewebdis --network=scythe scythe/rewebdis:latest)
        echo3 "started container 'scythe-rewebdis' data in '$REWEBDIS_DATA_DIR' (docker id '$did')..." 2>&1

        if docker ps -a --filter label=scythe=testrunner | grep -q scythe-testrunner; then
            echo "killing old instance..." $(docker rm -f scythe-testrunner) >&2
        fi
        did=$(docker run -l scythe=testrunner -d --network scythe -e SCYTHE_REDIS_URL=redis://scythe-rewebdis --name scythe-testrunner scythe/testrunner:latest)
        echo3 "started container 'scythe-testrunner' (docker id '$did')..." 2>&1

        echo2 "Importing the exam configuration in the testrunner"
        st configure -c "$TM_SETTINGS_LOCAL" -s "$SCYTHE_EXAM_ID"

      ;;

    \?)
      echo "scythe: localtest: invalid option: -$OPTARG." >&2
      exit 1
      ;;
    :)
      echo "scythe: localtest: option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

if ! docker ps -a --filter label=scythe=rewebdis | grep -q scythe-rewebdis || ! docker ps -a --filter label=scythe=testrunner | grep -q scythe-testrunner; then
    echo "scythe test: the testrunner is not running, reissue this command with -s to make it start"
    return
fi

echo2 "Submitting harvests to the testrunner"
st stage -H "$HARVESTS_DIR" -s "$SCYTHE_EXAM_ID" $clean_opt

echo2 "Tailing testrunner logs (press ^C to stop)"
st logs -f
