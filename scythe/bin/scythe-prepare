echo1 "Preparing configuration"

tempdir=$(mktemp -d /tmp/scythe-XXXXXXXXXXXX) || exit 1

echo2 "Preparing TM tar directoroy"

echo3 "Adding exercises, making expected outputs"

mkdir "$tempdir/bundle"
n=1
for e in $(tail -n +2 "$EXERCISES"); do
	echo3 "$e"
	dst=$(printf '%s/bundle/%02d-%s' "$tempdir" $n "$e")
	mkdir "$dst"
	convert_mds "$EXERCISES_DIR/$e" "$dst"
	sf generate -t 2 -fs "$EXERCISES_DIR/$e" -e "$dst"
	n=$(( n + 1 ))
done

echo3 "Adding markdowns and bins"

convert_mds "$BASE_BUNDLE" "$tempdir/bundle/"
cp -r "$BASE_BUNDLE/bin" "$tempdir/bundle/bin"
cp "$SCYTHE_HOME/bin/sf" "$tempdir/bundle/bin/.sf"

echo3 "Fixing perms"

chmod -R u+rX-w,go= "$tempdir/bundle"
chmod -R u+rx "$tempdir/bundle/bin"
find "$tempdir/bundle" -name \*-\* -type d -exec chmod u+w {} \;

echo2 "Generating the TM configuration file (base + tar + uids)"

secret=$(head -n 1 "$EXERCISES")
if [ -z "$secret" ]; then
	secret=$(python -c 'import uuid; print uuid.uuid4()')
	echo3 "Generated new secret $secret"
else
	echo3 "Using secret $secret"
fi

cat > "$tempdir/conf.py" <<EOF
UPLOAD_DIR = '/uploads'
BASE_URL = '$REMOTE_ENDPOINT'

SECRET_KEY = '$secret'
MAX_CONTENT_LENGTH = 16 * 1024 * 1024
LANG = 'it'
HOME = '\$HOME'

CLIENT_PATH = '### home ###/bin/.tm'

ENVIRONMENT_SETUP = """
export PATH="\$HOME/bin:\$PATH"
"""
EOF

echo3 "Adding test account with UID set to '000000'"

(echo -e '000000\tTEST ACCOUNT'; cat "$REGISTERED_UIDS") > "$tempdir/registered_uids.tsv"

echo3 "Creting server configuration"
filter='^(bin/.*|.+\.html|[0-9]+-.+/(.+\.html|((input|expected|args)-[0-9]+)\.txt))$'
tm mkconf -vf "$filter" -b "$tempdir/conf.py" -r "$tempdir/registered_uids.tsv" "$tempdir/bundle" "$TM_SETTINGS_SERVER"

echo3 "Creting local configuration"
filter='^[0-9]+-.+/(input|expected|args)-[0-9]+(t|)\.txt$'
tm mkconf -vf "$filter" -b "$tempdir/conf.py" -r "$tempdir/registered_uids.tsv" "$tempdir/bundle" "$TM_SETTINGS_LOCAL"

echo2 "Cleanup temp dir"

chmod -R u+rwx "$tempdir"; rm -rf "$tempdir"
